# Dockerfile for the FastAPI application.

FROM public.ecr.aws/lambda/python:3.11-arm64

WORKDIR ${LAMBDA_TASK_ROOT}

# Install minimal dependencies.
RUN yum update -y && \
    yum install -y wget git gcc make tar xz libsndfile

# Install FFMPEG.
RUN wget https://johnvansickle.com/ffmpeg/releases/ffmpeg-release-arm64-static.tar.xz && \
    wget https://johnvansickle.com/ffmpeg/releases/ffmpeg-release-arm64-static.tar.xz.md5 && \
    md5sum -c ffmpeg-release-arm64-static.tar.xz.md5 && \
    tar xvf ffmpeg-release-arm64-static.tar.xz && \
    mv ffmpeg-*-arm64-static/ffmpeg /usr/local/bin/ && \
    mv ffmpeg-*-arm64-static/ffprobe /usr/local/bin/ && \
    rm -rf ffmpeg-*-arm64-static ffmpeg-release-arm64-static.tar.xz ffmpeg-release-arm64-static.tar.xz.md5 && \
    ffmpeg -version && \
    ffprobe -version

# Ensure the conda environment is activated on RUN commands
ENV CONDA_PREFIX=miniconda
ENV PATH=miniconda/bin:$PATH

# Copies over code.
ADD bot/ bot/
ADD tests/ tests/
COPY dist/config.yaml .
COPY pyproject.toml .
COPY setup.py .
COPY setup.cfg .
COPY README.md .

# Points to the config file.
ENV DPSH_CONFIG=./config.yaml

# Installs the package.
RUN pip install --upgrade --upgrade-strategy eager --force-reinstall '.[dev]'

# Cleans up
RUN yum clean all && \
    rm -rf /var/cache/yum

# Tests importing the handler.
RUN python -c "from bot.api.app.main import handler"

# Runs unit tests.
RUN python -m pytest

CMD ["bot.api.app.main.handler"]

name: Builds the Docker images.

on:
  push:
    branches:
      - master
  workflow_dispatch:

permissions:
  pages: write
  id-token: write
  contents: write

concurrency:
  group: "deploy"
  cancel-in-progress: true

jobs:
  build-api:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: .

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Install Python package
        shell: bash
        run: |
          pip install omegaconf
          pip install --no-deps .

      - name: Build and publish
        env:
          ECR_URI: ${{ secrets.ECR_URI }}
        run: |
          ./docker/api/build.sh

  build-worker:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: .

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Install Python package
        shell: bash
        run: |
          pip install omegaconf
          pip install --no-deps .

      - name: Build and publish
        env:
          ECR_URI: ${{ secrets.ECR_URI }}
        run: |
          ./docker/worker/build.sh

  build-frontend:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: frontend

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16.15.1"

      - name: Install Dependencies
        run: npm install

      - name: Write .env.production
        run: |
          echo "REACT_APP_BACKEND_URL=${{ vars.SITE_BACKEND }}" > .env.production
          echo "REACT_APP_GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}" >> .env.production

      - name: Build
        run: npm run build

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: frontend/build

  deploy-frontend:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build-frontend

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1

name: Deploy to Development Environment

on:
  push:
    branches:
      - master
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "deploy"
  cancel-in-progress: true

jobs:
  build-api:
    environment:
      name: dev
      url: ${{ vars.SITE_BACKEND }}
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: .

    steps:
      - name: Build package
        uses: ./.github/actions/dpsh_build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Build and publish
        # The build script requires access to the secrets and vars in the
        # dev environment, as environment variables.
        env:
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_READ_HOST: ${{ vars.DB_READ_HOST }}
          DB_WRITE_HOST: ${{ vars.DB_WRITE_HOST }}
          ECR_URI: ${{ secrets.ECR_URI }}
          S3_BUCKET: ${{ vars.S3_BUCKET }}
          SITE_HOMEPAGE: ${{ vars.SITE_HOMEPAGE }}
          SQS_QUEUE: ${{ vars.SQS_QUEUE}}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          HF_HUB_TOKEN: ${{ secrets.HF_HUB_TOKEN }}
          SMTP_EMAIL: ${{ vars.SMTP_EMAIL }}
          SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
          SMTP_HOST: ${{ vars.SMTP_HOST }}
        run: |
          ./scripts/build_worker_docker_image.sh

  build-worker:
    environment: dev
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: .

    steps:
      - name: Build package
        uses: ./.github/actions/dpsh_build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Build and publish
        # The build script requires access to the secrets and vars in the
        # dev environment, as environment variables.
        env:
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_READ_HOST: ${{ vars.DB_READ_HOST }}
          DB_WRITE_HOST: ${{ vars.DB_WRITE_HOST }}
          ECR_URI: ${{ secrets.ECR_URI }}
          S3_BUCKET: ${{ vars.S3_BUCKET }}
          SITE_HOMEPAGE: ${{ vars.SITE_HOMEPAGE }}
          SQS_QUEUE: ${{ vars.SQS_QUEUE}}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          HF_HUB_TOKEN: ${{ secrets.HF_HUB_TOKEN }}
          SMTP_EMAIL: ${{ vars.SMTP_EMAIL }}
          SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
          SMTP_HOST: ${{ vars.SMTP_HOST }}
        run: |
          ./scripts/build_api_docker_image.sh

  build-frontend:
    environment: dev
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: frontend

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "16.15.1"

      - name: Install Dependencies
        run: npm install

      - name: Write .env.production
        run: |
          echo "REACT_APP_BACKEND_URL=${{ vars.SITE_BACKEND }}" > .env.production
          echo "REACT_APP_GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}" >> .env.production

      - name: Build
        run: npm run build

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: frontend/build

  deploy-frontend:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build-frontend

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
